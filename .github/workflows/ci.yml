name: CI

on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    
env:
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true

jobs:
  build:
    strategy:
      matrix:
        boost_version: [1.70.0,1.73.0]
        ndk_version: [20.1.5948944]
        #abi: [armeabi-v7a,arm64-v8a,x86,x86_64]
        #os: [ubuntu-latest,macos-latest]
        os: [ubuntu-latest]
        include:
          # includes a new variable of 'variation' for each host os
          - os: ubuntu-latest
            variation: linux
          #- os: macos-latest
           # variation: mac
      fail-fast: false

    runs-on: ${{ matrix.os }}

    steps:
    - name: Diagnostics
      run: |
        printenv | grep ANDROID
        #${ANDROID_HOME}/tools/bin/sdkmanager --list
    - name: Install NDK
      run: |
        ${ANDROID_HOME}/tools/bin/sdkmanager "ndk;${{ matrix.ndk_version }}"
    - name: Checkout Sources
      uses: actions/checkout@v1
      with:
        fetch-depth: 1
    - name: Setup Environment Variables
      run: |
        set -x
        export NDK_ROOT=${ANDROID_SDK_ROOT}/ndk/${{ matrix.ndk_version }}
        echo "::set-env name=NDK_ROOT::$NDK_ROOT"
        export NUM_CPU=`python -c 'import multiprocessing as mp; print(mp.cpu_count())'`
        echo "::set-env name=NUM_CPU::$NUM_CPU"
        set
        mkdir -p bins
        mkdir -p logs
    - name: Build Boost for Android
      run: |
        for abi in armeabi-v7a #arm64-v8a x86 x86_64 
        do
        CXXFLAGS="-std=c++14" ./build-android.sh --boost=${{ matrix.boost_version }} --arch=$abi --with-libraries=atomic,random,date_time,filesystem,system,thread,chrono "${NDK_ROOT}"
        mkdir -p ${GITHUB_WORKSPACE}/bins/prefab/modules/boost
        mv build/out/$abi/lib ${GITHUB_WORKSPACE}/bins/prefab/modules/boost/android.$abi || true
        done
    - name: Prepare Binaries
      run: |
        set -x
        # ls -alFR build/out/
        # cp -r ${GITHUB_WORKSPACE}/bins/${{ matrix.abi }}/include ${GITHUB_WORKSPACE}/bins/include 
        # Get rid of boost include directory cause it takes a long time to pack and upload (~20 min)
        find ${GITHUB_WORKSPACE}/bins -type d -name "include" -exec rm -rf {} +
        find ${GITHUB_WORKSPACE}/bins -type d -name "cmake" -exec rm -rf {} +
        #mv ${GITHUB_WORKSPACE}/bins/${{ matrix.abi }}/include ${GITHUB_WORKSPACE}/bins/include 
        ls -alFR ${GITHUB_WORKSPACE}/bins
      if: always()
    - name: Upload Binaries
      uses: actions/upload-artifact@v1
      with:
        name: boost_${{ matrix.boost_version }}
        path: ./bins
      if: always()
    - name: Prepare Logs
      run: |
        set -x
        mv logs/*.log ${GITHUB_WORKSPACE}/logs/ || true
        ls -alFR ${GITHUB_WORKSPACE}/logs
      if: always()
    - name: Upload Logs
      uses: actions/upload-artifact@v1
      with:
        name: logs_${{ matrix.boost_version }}
        path: ./logs
      if: always()
